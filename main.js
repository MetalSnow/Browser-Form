(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>s});var r=t(354),o=t.n(r),i=t(314),a=t.n(i)()(o());a.push([n.id,"body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(147, 131, 113);\n  position: relative;\n}\n\nform {\n  background-color: rgb(211, 211, 211);\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  border-radius: 6px;\n}\n\nlabel {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  gap: 3px;\n  font-weight: bold;\n  box-sizing: border-box;\n}\n\ninput,\nselect {\n  padding: 5px 10px;\n  outline: none;\n  border-radius: 3px;\n  border: none;\n  font-size: 16px;\n}\n\nbutton {\n  width: 100px;\n  margin-left: 100px;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.error {\n  width: 100%;\n  padding: 0;\n\n  font-size: 80%;\n  color: white;\n  background-color: #900;\n  border-radius: 0 0 5px 5px;\n\n  box-sizing: border-box;\n}\n\n.error.active {\n  padding: 0.3em;\n}\n\ninput:valid {\n  border: 2px solid #5e7936;\n}\n\ninput:focus {\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.3);\n  border: 1px solid lightblue;\n}\n\nimg {\n  width: 15px;\n}\n\n.show-pwd,\n.show-c-pwd {\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  width: 15px;\n  border-radius: 50%;\n  position: absolute;\n  right: 5%;\n  top: 52%;\n}\n\n#submit {\n  border-radius: 6px;\n  font-weight: bold;\n}\n\n.highFiveMessage {\n  display: none;\n  position: absolute;\n  font-size: 24px;\n  font-weight: bold;\n  width: 20%;\n  top: 40%;\n  right: 36%;\n  padding: 60px 60px;\n  text-align: center;\n  border-radius: 16px;\n  background-color: aquamarine;\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.3);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yCAAyC;EACzC,SAAS;EACT,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,oCAAoC;EACpC,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;EACpC,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,aAAa;EACb,QAAQ;EACR,iBAAiB;EACjB,sBAAsB;AACxB;;AAEA;;EAEE,iBAAiB;EACjB,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,UAAU;;EAEV,cAAc;EACd,YAAY;EACZ,sBAAsB;EACtB,0BAA0B;;EAE1B,sBAAsB;AACxB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,8CAA8C;EAC9C,2BAA2B;AAC7B;;AAEA;EACE,WAAW;AACb;;AAEA;;EAEE,YAAY;EACZ,6BAA6B;EAC7B,UAAU;EACV,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,SAAS;EACT,QAAQ;AACV;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,UAAU;EACV,QAAQ;EACR,UAAU;EACV,kBAAkB;EAClB,kBAAkB;EAClB,mBAAmB;EACnB,4BAA4B;EAC5B,8CAA8C;AAChD",sourcesContent:["body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgb(147, 131, 113);\n  position: relative;\n}\n\nform {\n  background-color: rgb(211, 211, 211);\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  width: 20%;\n  border-radius: 6px;\n}\n\nlabel {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  gap: 3px;\n  font-weight: bold;\n  box-sizing: border-box;\n}\n\ninput,\nselect {\n  padding: 5px 10px;\n  outline: none;\n  border-radius: 3px;\n  border: none;\n  font-size: 16px;\n}\n\nbutton {\n  width: 100px;\n  margin-left: 100px;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.error {\n  width: 100%;\n  padding: 0;\n\n  font-size: 80%;\n  color: white;\n  background-color: #900;\n  border-radius: 0 0 5px 5px;\n\n  box-sizing: border-box;\n}\n\n.error.active {\n  padding: 0.3em;\n}\n\ninput:valid {\n  border: 2px solid #5e7936;\n}\n\ninput:focus {\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.3);\n  border: 1px solid lightblue;\n}\n\nimg {\n  width: 15px;\n}\n\n.show-pwd,\n.show-c-pwd {\n  border: none;\n  background-color: transparent;\n  padding: 0;\n  width: 15px;\n  border-radius: 50%;\n  position: absolute;\n  right: 5%;\n  top: 52%;\n}\n\n#submit {\n  border-radius: 6px;\n  font-weight: bold;\n}\n\n.highFiveMessage {\n  display: none;\n  position: absolute;\n  font-size: 24px;\n  font-weight: bold;\n  width: 20%;\n  top: 40%;\n  right: 36%;\n  padding: 60px 60px;\n  text-align: center;\n  border-radius: 16px;\n  background-color: aquamarine;\n  box-shadow: 1px 1px 5px 1px rgba(0, 0, 0, 0.3);\n}\n"],sourceRoot:""}]);const s=a},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(a[d]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var d=n[s],A=r.base?d[0]+r.base:d[0],c=i[A]||0,p="".concat(A," ").concat(c);i[A]=c+1;var l=t(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==l)e[l].references++,e[l].updater(u);else{var x=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:p,updater:x,references:1})}a.push(p)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var d=r(n,o),A=0;A<i.length;A++){var c=t(i[A]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=d}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),o=t.n(r),i=t(659),a=t.n(i),s=t(56),d=t.n(s),A=t(540),c=t.n(A),p=t(113),l=t.n(p),u=t(208),x={};x.styleTagTransform=l(),x.setAttributes=d(),x.insert=a().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=c(),e()(u.A,x),u.A&&u.A.locals&&u.A.locals;const f=document.querySelector("form"),b=document.querySelectorAll("input"),E=document.getElementById("mail"),m=document.querySelector("#mail + span.error"),C=document.getElementById("country"),g=document.getElementById("zip"),v=document.querySelector("#zip + span.error"),h=document.querySelector("#pwd"),y=document.querySelector("#pwd + span.error"),B=document.querySelector("#c-pwd"),w=document.querySelector("#c-pwd + span.error"),k=document.querySelector(".show-pwd"),S=document.querySelector(".show-c-pwd"),M=document.querySelector(".highFiveMessage");function j(){E.checkValidity()?(m.textContent="",m.classList.remove("active"),E.style.border=""):(E.style.border="2px solid red",E.validity.valueMissing?m.textContent="You need to enter an email address.":E.validity.typeMismatch?m.textContent="Entered value needs to be an email address.":E.validity.tooShort&&(m.textContent=`Email should be at least ${E.minLength} characters; you entered ${E.value.length}.`),m.className="error active")}function L(){const n={mr:["^(MR-)?\\d{4}$","Morocco ZIPs must have exactly 4 digits: e.g. MR-1950 or 1950"],cn:["^(CN-)?\\d{5}$","China ZIPs must have exactly 5 digits: e.g. CN-75012 or 75012"],jp:["^(D-)?\\d{5}$","Japan ZIPs must have exactly 5 digits: e.g. JP-12345 or 12345"],rs:["^\\d{3}(-)?\\d{3}$","Russia ZIPs must have exactly 6 digits: e.g. 123-456 or 123456"]};new RegExp(n[C.value][0],"").test(g.value)?(v.textContent="",v.classList.remove("active"),g.style.border=""):(v.textContent=n[C.value][1],v.className="error active",g.style.border="2px solid red")}function z(){/^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/.test(h.value)?(y.textContent="",y.className="error",h.style.border="",k.style="top: 52%;"):(y.textContent=`Password must contain minimum ${h.minLength} characters and at least one letter and one number `,y.className="error active",h.style.border="2px solid red",k.style="top: 32%;")}function q(){return h.value!==B.value?(w.textContent="Password does not match!",w.className="error active",B.style.border="2px solid red",S.style="top: 42%;",!1):(w.textContent="",w.className="error",B.style.border="",S.style="top: 52%;",!0)}function I(n){"password"===n.type?n.type="text":n.type="password"}E.addEventListener("input",j),C.addEventListener("change",L),g.addEventListener("input",L),h.addEventListener("input",z),B.addEventListener("input",q),k.addEventListener("click",(n=>{n.preventDefault(),I(h)})),S.addEventListener("click",(n=>{n.preventDefault(),I(B)})),f.addEventListener("submit",(n=>{n.preventDefault(),b.forEach((n=>{n.checkValidity()&&q()?(M.style.display="block",setTimeout((()=>{M.style.display="none"}),1e3)):(j(),L(),z())}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,